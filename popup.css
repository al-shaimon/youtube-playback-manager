body {
  width: 320px;
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background: transparent;
  color: #333;
  max-height: 600px;
  overflow: hidden;
}

.container {
  background: linear-gradient(145deg, #ffffff, #f8f9fa);
  /* border-radius: 8px;
  margin: 4px; */
  overflow: hidden;
}

.header {
  background: linear-gradient(135deg, #ff0000, #cc0000);
  color: white;
  padding: 12px 16px;
  text-align: center;
}

.header h2 {
  margin: 0;
  font-size: 16px;
  font-weight: 600;
}

.speed-section {
  padding: 16px;
}

.current-speed {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8f9fa;
  padding: 10px 14px;
  border-radius: 6px;
  margin-bottom: 12px;
  border-left: 4px solid #ff0000;
}

.label {
  font-weight: 500;
  color: #666;
  font-size: 13px;
}

.speed-value {
  font-size: 16px;
  font-weight: bold;
  color: #ff0000;
}

.speed-controls {
  margin-bottom: 16px;
}

.input-group {
  display: flex;
  align-items: center;
  gap: 6px;
  margin-bottom: 10px;
}

.input-group label {
  font-weight: 500;
  color: #555;
  min-width: 60px;
  font-size: 13px;
}

#speedInput {
  flex: 1;
  padding: 6px 10px;
  border: 2px solid #e1e5e9;
  border-radius: 4px;
  font-size: 13px;
  transition: border-color 0.2s;
}

#speedInput:focus {
  outline: none;
  border-color: #ff0000;
}

.unit {
  font-weight: 500;
  color: #666;
}

.apply-btn {
  width: 100%;
  background: linear-gradient(135deg, #ff0000, #cc0000);
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 13px;
  font-weight: 600;
  cursor: pointer;
  transition: transform 0.2s, box-shadow 0.2s;
}

.apply-btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(255, 0, 0, 0.3);
}

.apply-btn:active {
  transform: translateY(0);
}

.preset-speeds h3 {
  margin: 0 0 8px 0;
  font-size: 13px;
  font-weight: 600;
  color: #555;
}

.preset-buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 4px;
  margin-bottom: 12px;
}

.preset-btn {
  background: #f8f9fa;
  border: 2px solid #e1e5e9;
  padding: 6px 4px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  text-align: center;
}

.preset-btn:hover {
  background: #ff0000;
  color: white;
  border-color: #ff0000;
  transform: translateY(-1px);
}

.preset-btn.active {
  background: #ff0000;
  color: white;
  border-color: #ff0000;
}

.settings {
  margin: 14px 0;
  padding: 12px;
  background: #f8f9fa;
  border-radius: 6px;
}

.setting-item {
  margin-bottom: 10px;
}

.setting-item:last-child {
  margin-bottom: 0;
}

.checkbox-container {
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 12px;
  color: #555;
  position: relative;
  padding-left: 20px;
}

.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  left: 0;
  height: 14px;
  width: 14px;
  background-color: white;
  border: 2px solid #e1e5e9;
  border-radius: 3px;
  transition: all 0.2s;
}

.checkbox-container:hover .checkmark {
  border-color: #ff0000;
}

.checkbox-container input:checked ~ .checkmark {
  background-color: #ff0000;
  border-color: #ff0000;
}

.checkmark:after {
  content: '';
  position: absolute;
  display: none;
  left: 4px;
  top: 1px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

.reset-section {
  margin-top: 16px;
}

.reset-btn {
  width: 100%;
  background: #6c757d;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 13px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.reset-btn:hover {
  background: #5a6268;
}

.info {
  background: #fff3cd;
  border: 1px solid #ffeaa7;
  border-radius: 0 0 12px 12px;
  padding: 12px 20px;
  font-size: 12px;
  color: #856404;
}

.info p {
  margin: 0;
  line-height: 1.4;
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.container {
  animation: fadeIn 0.3s ease-out;
}
